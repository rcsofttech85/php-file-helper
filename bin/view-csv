#!/usr/bin/env php
<?php

require 'vendor/autoload.php';

use rcsofttech85\FileHandler\CsvFileHandler;
use rcsofttech85\FileHandler\DI\ServiceContainer;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\SingleCommandApplication;
use Symfony\Component\Console\Style\SymfonyStyle;

$command = (new SingleCommandApplication())
    ->addArgument('csvFile', InputArgument::REQUIRED, 'csv file name')
    ->setCode(function (InputInterface $input, OutputInterface $output): int {
        $io = new SymfonyStyle($input, $output);
        $csvFile = $input->getArgument('csvFile');


        if (!file_exists($csvFile)) {
            $io->error("{$csvFile} does not exists");
            return Command::FAILURE;
        }

        $serviceContainer = new ServiceContainer();
        /** @var CsvFileHandler $csvFileHandler */
        $csvFileHandler = $serviceContainer->getContainerBuilder()->get('csv_file_handler');

        $io->title($csvFile);
        $table = $io->createTable();
        $headers = $csvFileHandler->extractHeader($csvFile);

        if (!$headers) {
            $io->error('invalid csv file');
            return Command::FAILURE;
        }


        $table->setHeaders($headers);
        $table->setRows($csvFileHandler->toArray($csvFile));

        $table->render();

        $io->newLine();


        return Command::SUCCESS;
    })->run();
